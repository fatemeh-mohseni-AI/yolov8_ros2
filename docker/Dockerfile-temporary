# ----------------------------------------------------------------------------------------------------------------------
#
#  this project uses ultralytics and ultralytics needs opencv>=4.6.0
#  although all timongentzsch images have opencv==4.5.2 .
#  here we build opencv==4.6.0 and ros-foxy manually
# due to filttering and sanctions I couldn't build the original Dockerfile in here :) .
# so i just install opencv with pip ; hencd , it's not
# cuda compatible . but doesn't matter for now
#
# ----------------------------------------------------------------------------------------------------------------------

FROM --platform=linux/arm64 timongentzsch/l4t-ubuntu20-base


ENV DEBIAN_FRONTEND=noninteractive

ARG ROS_PKG=ros_base
ARG ROS_DISTRO=foxy
ARG ROS_ROOT=/opt/ros/${ROS_DISTRO}

ENV repo=/root/ros2_ws/src/Ros2_Yolov8
ENV wd=/root/ros2_ws

ENV LANG=en_US.UTF-8
ENV PYTHONIOENCODING=utf-8


# --------------------------------------------------------------------------------------------
# install ros-foxy
# --------------------------------------------------------------------------------------------

# add the ROS deb repo to the apt sources list

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        locales \
		curl \
		wget \
		gnupg2 \
		lsb-release \
		ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# change the locale from POSIX to UTF-8
RUN locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

#
# install ros2 packages
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
		ros-${ROS_DISTRO}-ros-base \
		python3-colcon-common-extensions \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# --------------------------------------------------------------------------------------------
# install opencv==4.6.0
# --------------------------------------------------------------------------------------------
RUN python3 -m pip install --no-cache-dir opencv-python==4.6.0.66


CMD ["bash"]
WORKDIR /root
